name: ci-artifacts

on:
  push:

env:
  LC_CTYPE: C.UTF-8

jobs:
  test-minimal-sdk:
    runs-on: windows-latest
    strategy:
      matrix:
        # 0..16 permuted according to the matrix builds' timings as of git/git@9fadedd63
        nr: [5]
    steps:
      - name: reuse artifacts
        shell: bash
        run: |
          run_id=4993397800 &&

          curl -L https://api.github.com/repos/git-for-windows/git-sdk-64/actions/runs/$run_id/artifacts |
          jq -r '.artifacts[] | [.name, .archive_download_url] | @tsv' |
          tr -d '\r' |
          while read name url
          do
            echo "$name"
            curl -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
              -#sLo /tmp/"$name".zip "$url" &&
            unzip -q /tmp/"$name".zip
          done
      - name: uncompress minimal-sdk
        shell: bash
        run: |
          mkdir -p minimal-sdk &&
          tar -C minimal-sdk -xzf git-sdk-64-minimal.tar.gz &&
          minimal-sdk/init.sh
      - name: start tmate for debugging
        shell: bash
        run: |
          (
            cd / &&
            G4W=/c/Program\ Files/Git &&
            cp -n "$G4W"/usr/bin/{ssh-keygen.exe,msys-crypto-1.1.dll,msys-z.dll} usr/bin/ &&

            CURL="$G4W"/mingw64/bin/curl.exe &&
            "$CURL" -Lo /tmp/tmate.tar.zst https://repo.msys2.org/msys/x86_64/tmate-2.4.0-1-x86_64.pkg.tar.zst &&
            tar xvf /tmp/tmate.tar.zst usr/bin/tmate.exe &&
            "$CURL" -Lo /tmp/libevent.tar.zst https://repo.msys2.org/msys/x86_64/libevent-2.1.12-2-x86_64.pkg.tar.zst &&
            tar xvf /tmp/libevent.tar.zst usr/bin/msys-event-2-1-7.dll &&
            "$CURL" -Lo /tmp/msgpack-c.tar.zst https://repo.msys2.org/msys/x86_64/msgpack-c-4.0.0-1-x86_64.pkg.tar.zst &&
            tar xvf /tmp/msgpack-c.tar.zst usr/bin/msys-msgpackc-2.dll &&
            "$CURL" -Lo /tmp/libssh.tar.zst https://repo.msys2.org/msys/x86_64/libssh-0.9.6-1-x86_64.pkg.tar.zst &&
            tar xvf /tmp/libssh.tar.zst usr/bin/msys-ssh-4.dll
          ) &&

          # restrict SSH access to the "dscho"
          # this requires calling `ssh -i <private-key> [...]` later on
          mkdir -p ~/.ssh &&
          echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDSXs87cLXHuXPXjPTyb3HTDizuD07CytsUgjXazbkfzD7/EZF5g6cRWnc+gbqApQCzGSbLXxCd+AV/UxyS62v34kO/k5olz6DF6aMURbvFqrB9v0px86T0ScYjehUf5NYzGixIIghW3Pdxqi6s8BRuNuUjTGsNDzlMLA8N9pK1TOBZglsRlBUdtg7zeXBN/gkS7tf44eAw7gxMNfhrb1ackEveeu7PDUEvkoHSfMFITBgd8z4PonoxZjWrijoQXxXKuD1GtWrvfev1yc6hGnLlRK8HCnnq87eYUd5iUVO2yWNBhVkySJMp66UuHKne7uROXslIhUT98cgDU04T/ZpZ2qwQqpsl0ohDC8rqiLSeAFNZQZdjwVAXtH+FIQLT8fyHaU8HsHD4exMPUHSaKIRL0kBbPS8Wxj1qh/F3lNPPtIxEmlbpVN56xSUkFGqBJRET4FIH+UpDiQE7nsaD4rl3iys7Aj0B2gFMttOOvq8J/dFOMqX+NEyiMAHVsFT0SBnKZfk5J96kWOANbJa753QC/01G8wiMKTU6M87Ziv3mB/FqIu97+78TYhEzdAOr3V7NZp/ccx6LoD7zvcDkKCaWD9PxPX2hcv70fZ/WsZ6wrkVEmBHs3vJ7lM+caTR8ndjt9wC5ceRfI1s55wZ8AZ9PJ2PVxpm9ZYDsgsiQXIwAFQ== x' >~/.ssh/authorized_keys &&

          # Generate an SSH key (needed for tmate)
          echo -e 'y\n' | ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa &&

          # Start tmate session
          export CHERE_INVOKING=1 &&
          tmate -S /tmp/tmate.sock -a ~/.ssh/authorized_keys new-session -d &&
          tmate -S /tmp/tmate.sock wait tmate-ready &&

          # Print SSH invocation
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
      - name: uncompress git-artifacts
        shell: bash
        run: tar -C .. -xzf git-artifacts.tar.gz
      - name: test
        shell: bash
        run: |
          set -x
          test "$(cygpath -aw /)" = "${{github.workspace}}\minimal-sdk" || exit 1
          cd ../git/t &&
          echo T="$(ls -S t[0-9]*.sh | awk '!((NR+${{matrix.nr}})%17)' | tr '\n' \ )" >/tmp/a1 &&
          make T=t3701-add-interactive.sh prove || {
            for d in trash*
            do
              t=${d#trash directory.}
              echo ===========================
              echo Failed: $t.sh
              cat test-results/$t.out
            done
            exit 1
          }
        env:
          PATH: ${{github.workspace}}\minimal-sdk\mingw64\bin;${{github.workspace}}\minimal-sdk\usr\bin;${{github.workspace}}\minimal-sdk\usr\bin\core_perl;C:\Windows\system32;C:\Windows;C:\Windows\system32\wbem
          GIT_TEST_OPTS: --verbose-log -x --no-chain-lint
          GIT_PROVE_OPTS: --timer --jobs 8
          NO_SVN_TESTS: 1
      - name: wait for tmate to be done
        if: always()
        shell: bash
        run: |
          while test -e /tmp/tmate.sock
          do
            tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
            sleep 5
          done
