name: ci-artifacts

on:
  push:

env:
  LC_CTYPE: C.UTF-8

jobs:
  minimal-sdk-artifact:
    runs-on: windows-latest
    steps:
      - name: clone git-sdk-64
        shell: bash
        run: git clone --bare --depth=1 --filter=blob:none --single-branch -b ${REF#refs/heads/} https://github.com/${{github.repository}}
        env:
          REF: ${{github.ref}}
      - name: clone build-extra
        run: git clone --depth=1 --single-branch -b main https://github.com/git-for-windows/build-extra
      - name: build git-sdk-64-minimal-sdk
        shell: bash
        run: sh -x ./build-extra/please.sh create-sdk-artifact --sdk=git-sdk-64.git minimal-sdk
      - name: replace msys2-runtime
        shell: bash
        run: |
          curl  -Lo /tmp/msys2-runtime.zip \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
            https://api.github.com/repos/dscho/msys2-runtime/actions/artifacts/352801589/zip &&
          unzip -v /tmp/msys2-runtime.zip &&
          unzip -p /tmp/msys2-runtime.zip usr/bin/msys-2.0.dll >minimal-sdk/usr/bin/msys-2.0.dll
      - name: compress artifact
        shell: bash
        run: (cd minimal-sdk && tar cvf - * .[0-9A-Za-z]*) | xz -9 >git-sdk-64-minimal.tar.xz
      - name: upload minimal-sdk artifact
        uses: actions/upload-artifact@v1
        with:
          name: minimal-sdk
          path: git-sdk-64-minimal.tar.xz
      - name: clone git.git's `master`
        run: git clone --depth=1 --branch master https://github.com/git/git ..\git
      - name: build current `master` of git.git
        run: |
          & .\minimal-sdk\usr\bin\bash.exe -lc "make -C ../git NO_PERL=1 SKIP_DASHED_BUILT_INS=YesPlease -j8 all strip"
      - name: compress git artifacts
        shell: bash
        run: tar -C .. -cf - --exclude '*.a' --exclude '*.o' --exclude .git --exclude .depend git | xz -9 >git-artifacts.tar.xz
      - name: upload git artifacts for testing
        uses: actions/upload-artifact@v1
        with:
          name: git-artifacts
          path: git-artifacts.tar.xz
  test-minimal-sdk:
    runs-on: windows-latest
    needs: [minimal-sdk-artifact]
    strategy:
      matrix:
        # 0..16 permutated according to the matrix builds' runtimes as of git/git@9fadedd63
        nr: [9, 6, 13, 0, 8, 5, 2, 16, 15, 11, 10, 1, 7, 3, 14, 12, 4]
    steps:
      - name: download minimal-sdk artifact
        uses: actions/download-artifact@v1
        with:
          name: minimal-sdk
          path: ${{github.workspace}}
      - name: uncompress minimal-sdk
        shell: bash
        run: mkdir -p minimal-sdk && tar -C minimal-sdk -xJf git-sdk-64-minimal.tar.xz
      - name: download git artifacts
        uses: actions/download-artifact@v1
        with:
          name: git-artifacts
          path: ${{github.workspace}}
      - name: uncompress git-artifacts
        shell: bash
        run: tar -C .. -xJf git-artifacts.tar.xz
      - name: test
        run: |
          & .\minimal-sdk\usr\bin\bash.exe -lc @"
            cd ../git/t &&
            make T=\"`$(ls -S t[0-9]*.sh | awk \"!((NR+${{matrix.nr}})%17)\" | tr '\n' \\ )\" prove || {
              for d in trash*
              do
                t=`${d#trash directory.}
                echo ===========================
                echo Failed: `$t.sh
                cat test-results/`$t.out
              done
              exit 1
            }
          "@
        env:
          GIT_TEST_OPTS: --verbose-log -x --no-chain-lint
          GIT_PROVE_OPTS: --timer --jobs 8
          NO_SVN_TESTS: 1
  assorted-validations:
    runs-on: windows-latest
    needs: [minimal-sdk-artifact]
    steps:
      - name: download minimal-sdk artifact
        uses: actions/download-artifact@v1
        with:
          name: minimal-sdk
          path: ${{github.workspace}}
      - name: uncompress minimal-sdk
        shell: bash
        run: mkdir -p minimal-sdk && tar -C minimal-sdk -xJf git-sdk-64-minimal.tar.xz
      - name: run some tests
        shell: bash
        env:
          PATH: ${{github.workspace}}\minimal-sdk\mingw64\bin;${{github.workspace}}\minimal-sdk\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32\wbem
        run: |
          set -x
          cat >dll.c <<-\EOF &&
          __attribute__((dllexport)) int increment(int i)
          {
              return i + 1;
          }
          EOF

          gcc -Wall -g -O2 -shared -o sample.dll dll.c
          ls -la
